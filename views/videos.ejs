<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Videos</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
</head>
<body>
  <div class="container mt-5">
    <h1 class="text-center mb-4">Welcome, <%= userEmail %></h1>

    <!-- Go Live Button -->
    <div class="text-center mb-4">
      <a href="/live" class="btn btn-primary btn-lg">
        <i class="fas fa-video"></i> Go Live
      </a>
    </div>

    <!-- Upload Video Section -->
    <div class="card mb-4">
      <div class="card-body">
        <h2 class="card-title">Upload Video</h2>
        <form action="/upload" method="POST" enctype="multipart/form-data">
          <div class="mb-3">
            <label for="title" class="form-label">Video Title:</label>
            <input type="text" id="title" name="title" class="form-control" required>
          </div>
          <div class="mb-3">
            <label for="video" class="form-label">Upload Video:</label>
            <input type="file" id="video" name="video" class="form-control" accept="video/*" required>
          </div>
          <button type="submit" class="btn btn-success">
            <i class="fas fa-upload"></i> Upload
          </button>
        </form>
      </div>
    </div>

    <!-- Live Streams Section -->
    <div class="card mb-4">
      <div class="card-body">
        <h2 class="card-title">Ongoing Live Streams</h2>
        <div id="liveStreams" class="row">
          <!-- Live streams will be dynamically added here -->
        </div>
      </div>
    </div>

    <!-- Uploaded Videos Section -->
    <div class="card mb-4">
      <div class="card-body">
        <h2 class="card-title">Uploaded Videos</h2>
        <div class="row">
          <% if (videos.length > 0) { %>
            <% videos.forEach(video => { %>
              <div class="col-md-4 mb-4">
                <div class="card">
                  <video class="card-img-top" controls>
                    <source src="/uploads/<%= video.filename %>" type="video/mp4">
                    Your browser does not support the video tag.
                  </video>
                  <div class="card-body">
                    <h5 class="card-title"><%= video.title %></h5>
                    <p class="card-text">Uploaded by: <%= video.user.email %></p>
                  </div>
                </div>
              </div>
            <% }) %>
          <% } else { %>
            <p>No uploaded videos found.</p>
          <% } %>
        </div>
      </div>
    </div>

    <div class="text-center">
      <a href="/logout" class="btn btn-danger">
        <i class="fas fa-sign-out-alt"></i> Logout
      </a>
    </div>
  </div>

  <script src="/socket.io/socket.io.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/simple-peer/9.11.1/simplepeer.min.js"></script>
  <script>
    const socket = io();
    const liveStreamsContainer = document.getElementById('liveStreams');

    // Listen for updates to active streams
    socket.on('updateStreams', (streams) => {
      liveStreamsContainer.innerHTML = ''; // Clear existing streams

      if (streams.length > 0) {
        streams.forEach(stream => {
          const streamElement = document.createElement('div');
          streamElement.className = 'col-md-4 mb-4';
          streamElement.innerHTML = `
            <div class="card">
              <video id="remoteVideo-${stream.id}" class="card-img-top" autoplay></video>
              <div class="card-body">
                <h5 class="card-title">Live Stream by: ${stream.userEmail}</h5>
                <button class="btn btn-primary" onclick="watchStream('${stream.id}')">
                  <i class="fas fa-play"></i> Watch Live
                </button>
              </div>
            </div>
          `;
          liveStreamsContainer.appendChild(streamElement);
        });
      } else {
        liveStreamsContainer.innerHTML = '<p>No ongoing live streams.</p>';
      }
    });

    // Function to watch a live stream
    function watchStream(streamId) {
      const remoteVideo = document.getElementById(`remoteVideo-${streamId}`);

      // Create a new peer connection for the viewer
      const peer = new SimplePeer({ initiator: false });

      peer.on('signal', (data) => {
        socket.emit('stream', { streamId, signalData: data }); // Send signaling data to the server
      });

      socket.on('stream', (data) => {
        if (data.streamId === streamId) {
          peer.signal(data.signalData); // Receive signaling data from the server
        }
      });

      peer.on('stream', (stream) => {
        remoteVideo.srcObject = stream; // Display the live stream
      });
    }
  </script>
</body>
</html>